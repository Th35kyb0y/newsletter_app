{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankit\\\\Pictures\\\\Tiny_MCE\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(``);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      apiKey: \"cm0s5oticy0ahny0l3o0pdpyionk5z8jvftdcnjmp4p0py4y\",\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: value,\n      onChange: setValue,\n      init: {\n        height: 1000,\n        // menubar: false,\n        selector: 'textarea',\n        font_formats: \"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Oswald=oswald; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats\",\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'preview', 'help', 'wordcount'],\n        toolbar: 'undo redo | blocks | fontselect ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help' + 'link image',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n        paste_data_images: true,\n        plugins: 'image code',\n        height: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: log,\n      children: \"Log content HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ao/IdRzpRvEH6r7hrnSRE+3fD3s=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Editor","App","editorRef","value","setValue","log","current","console","getContent","evt","editor","height","selector","font_formats","plugins","toolbar","content_style","paste_data_images"],"sources":["C:/Users/Ankit/Pictures/Tiny_MCE/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nexport default function App() {\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(``)\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n\n  return (\n    <>\n    \n      <Editor\n        apiKey='cm0s5oticy0ahny0l3o0pdpyionk5z8jvftdcnjmp4p0py4y'\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue={value}\n        onChange={setValue}\n        init={{\n          height: 1000,\n          // menubar: false,\n          selector:'textarea',\n          font_formats: \"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Oswald=oswald; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats\",\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'preview', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | blocks | fontselect ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help' + \n            'link image',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n          paste_data_images: true,\n          plugins: 'image code',\n          height: 400\n        }}\n      />\n      <button onClick={log}>Log content HTML</button>\n     \n    </>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAE,EAAF,CAAlC;;EAEA,MAAMM,GAAG,GAAG,MAAM;IAChB,IAAIH,SAAS,CAACI,OAAd,EAAuB;MACrBC,OAAO,CAACF,GAAR,CAAYH,SAAS,CAACI,OAAV,CAAkBE,UAAlB,EAAZ;IACD;EACF,CAJD;;EAOA,oBACE;IAAA,wBAEE,QAAC,MAAD;MACE,MAAM,EAAC,kDADT;MAEE,MAAM,EAAE,CAACC,GAAD,EAAMC,MAAN,KAAiBR,SAAS,CAACI,OAAV,GAAoBI,MAF/C;MAGE,YAAY,EAAEP,KAHhB;MAIE,QAAQ,EAAEC,QAJZ;MAKE,IAAI,EAAE;QACJO,MAAM,EAAE,IADJ;QAEJ;QACAC,QAAQ,EAAC,UAHL;QAIJC,YAAY,EAAE,khBAJV;QAKJC,OAAO,EAAE,CACP,SADO,EACI,UADJ,EACgB,OADhB,EACyB,MADzB,EACiC,OADjC,EAC0C,SAD1C,EAEP,QAFO,EAEG,eAFH,EAEoB,cAFpB,EAEoC,MAFpC,EAE4C,YAF5C,EAGP,gBAHO,EAGW,OAHX,EAGoB,OAHpB,EAG6B,SAH7B,EAGwC,MAHxC,EAGgD,WAHhD,CALL;QAUJC,OAAO,EAAE,qCACP,gDADO,GAEP,6DAFO,GAGP,qBAHO,GAIP,YAdE;QAeJC,aAAa,EAAE,iEAfX;QAgBJC,iBAAiB,EAAE,IAhBf;QAiBJH,OAAO,EAAE,YAjBL;QAkBJH,MAAM,EAAE;MAlBJ;IALR;MAAA;MAAA;MAAA;IAAA,QAFF,eA4BE;MAAQ,OAAO,EAAEN,GAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA,gBADF;AAiCD;;GA5CuBJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}